{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":85723,"databundleVersionId":10652996,"sourceType":"competition"}],"dockerImageVersionId":30839,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-01-20T22:02:55.832976Z","iopub.execute_input":"2025-01-20T22:02:55.833356Z","iopub.status.idle":"2025-01-20T22:02:56.251735Z","shell.execute_reply.started":"2025-01-20T22:02:55.833319Z","shell.execute_reply":"2025-01-20T22:02:56.250604Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/playground-series-s5e1/sample_submission.csv\n/kaggle/input/playground-series-s5e1/train.csv\n/kaggle/input/playground-series-s5e1/test.csv\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"train=pd.read_csv('/kaggle/input/playground-series-s5e1/train.csv')\ntest=pd.read_csv('/kaggle/input/playground-series-s5e1/test.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-20T22:03:00.964749Z","iopub.execute_input":"2025-01-20T22:03:00.965272Z","iopub.status.idle":"2025-01-20T22:03:01.449195Z","shell.execute_reply.started":"2025-01-20T22:03:00.965237Z","shell.execute_reply":"2025-01-20T22:03:01.448146Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"train.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-20T22:04:03.509527Z","iopub.execute_input":"2025-01-20T22:04:03.510049Z","iopub.status.idle":"2025-01-20T22:04:03.610542Z","shell.execute_reply.started":"2025-01-20T22:04:03.509976Z","shell.execute_reply":"2025-01-20T22:04:03.609467Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 230130 entries, 0 to 230129\nData columns (total 6 columns):\n #   Column    Non-Null Count   Dtype  \n---  ------    --------------   -----  \n 0   id        230130 non-null  int64  \n 1   date      230130 non-null  object \n 2   country   230130 non-null  object \n 3   store     230130 non-null  object \n 4   product   230130 non-null  object \n 5   num_sold  221259 non-null  float64\ndtypes: float64(1), int64(1), object(4)\nmemory usage: 10.5+ MB\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"train.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-20T22:05:47.949485Z","iopub.execute_input":"2025-01-20T22:05:47.949886Z","iopub.status.idle":"2025-01-20T22:05:47.957032Z","shell.execute_reply.started":"2025-01-20T22:05:47.949849Z","shell.execute_reply":"2025-01-20T22:05:47.955756Z"}},"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"(230130, 6)"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"train.head(5)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-20T22:09:06.911718Z","iopub.execute_input":"2025-01-20T22:09:06.912060Z","iopub.status.idle":"2025-01-20T22:09:06.940317Z","shell.execute_reply.started":"2025-01-20T22:09:06.912034Z","shell.execute_reply":"2025-01-20T22:09:06.938684Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n  has_large_values = (abs_vals > 1e6).any()\n/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","output_type":"stream"},{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"   id        date country              store             product  num_sold\n0   0  2010-01-01  Canada  Discount Stickers   Holographic Goose       NaN\n1   1  2010-01-01  Canada  Discount Stickers              Kaggle     973.0\n2   2  2010-01-01  Canada  Discount Stickers        Kaggle Tiers     906.0\n3   3  2010-01-01  Canada  Discount Stickers            Kerneler     423.0\n4   4  2010-01-01  Canada  Discount Stickers  Kerneler Dark Mode     491.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>date</th>\n      <th>country</th>\n      <th>store</th>\n      <th>product</th>\n      <th>num_sold</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>2010-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Holographic Goose</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2010-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Kaggle</td>\n      <td>973.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>2010-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Kaggle Tiers</td>\n      <td>906.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>2010-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Kerneler</td>\n      <td>423.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>2010-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Kerneler Dark Mode</td>\n      <td>491.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}